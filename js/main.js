// Generated by CoffeeScript 1.7.1
(function() {
  var active, countries, datas, filterList, filters, height, hover, inactive, map, modelEducatif, polygon, popupAtStart, separator, svg, svgHeight, svgWidth, tipSelectOne, tipSelectOther, tipSelectTwo, updateWindow, width;

  svg = d3.select('svg');

  polygon = svg.selectAll('polygon');

  filterList = d3.select('#displayData nav');

  height = window.innerHeight;

  width = window.innerWidth;

  svgHeight = svg.attr('height');

  svgWidth = svg.attr('width');

  countries = ['Espagne', 'France', 'Italie', 'Grèce', 'Allemagne', 'Belgique', 'Royaume-Uni', 'Finlande', 'Norvège', 'Luxembourg'];

  tipSelectOne = 'Sélectionnez un des pays en couleur afin de découvrir quel est son modèle éducatif !';

  tipSelectTwo = 'Sélectionnez un deuxième pays afin de comparer ses données au premier !';

  tipSelectOther = 'Cliquez sur un autre pays pour changer votre deuxième sélection ou réinitialisez pour recommencer.';

  separator = ' et ';

  modelEducatif = 'Le modèle éducatif ';

  active = '#f5b355';

  inactive = '#f8f8f8';

  hover = '#06A59B';

  popupAtStart = true;

  updateWindow = function() {
    var temp;
    temp = (svgHeight - height) / 2 + 60;
    return svg.attr('viewBox', '0 ' + temp + ' ' + svgWidth + ' ' + svgHeight);
  };

  window.onresize = function() {
    return updateWindow();
  };

  updateWindow();

  popupAtStart = localStorage.getItem('blurInfos');

  if (popupAtStart === null) {
    d3.select('#blur').classed('closed', false);
  }

  d3.select('#blur button').on('click', function() {
    d3.select('#blur').classed('closed', true);
    return localStorage.setItem('blurInfos', 'bonjour');
  });

  map = {
    init: function() {
      polygon.each(function() {
        d3.select(this).classed('selected', false);
        d3.select(this).classed('second-selection', false);
        return d3.select(this).attr('fill', function() {
          if (countries.indexOf(d3.select(this).attr('data-pays')) > -1) {
            return active;
          } else {
            return inactive;
          }
        });
      });
      d3.selectAll('#infos h2').text('');
      d3.selectAll('#infos span').style('display', 'none');
      return d3.select('#tip').text(tipSelectOne);
    },
    changePointer: function() {
      return polygon.each(function() {
        if (d3.select(this).attr('fill') !== inactive) {
          return d3.select(this).style('cursor', 'pointer');
        }
      });
    },
    onMouseOver: function() {
      var country, el;
      map.changePointer();
      el = d3.select(this);
      country = el.attr('data-pays');

      /*
      		 * Some countries have more than one polygon. So we have to find all polygons with the same data-pays
      		 * Conditions needed : 
      		 * * Country clickable
      		 * * Data-pays is like country we are on hover (or the country has selected class)
       */
      return polygon.each(function() {
        if (el.attr('fill') !== inactive && d3.select(this).attr('data-pays') === country || d3.select(this).classed('selected') === true) {
          return d3.select(this).attr('fill', hover);
        }
      });
    },
    onMouseLeave: function() {
      return polygon.each(function() {
        if (d3.select(this).attr('fill') !== inactive && d3.select(this).classed('selected') === false) {
          return d3.select(this).attr('fill', active);
        }
      });
    },
    onClick: function() {
      var counter, country, counts, el, i, tempArray, textCountry, _i, _len;
      el = d3.select(this);
      country = el.attr('data-pays');
      counter = 0;
      tempArray = [];
      counts = [];
      polygon.each(function() {
        if (d3.select(this).classed('selected') === true) {
          return tempArray.push(d3.select(this).attr('data-pays'));
        }
      });
      for (_i = 0, _len = tempArray.length; _i < _len; _i++) {
        i = tempArray[_i];
        if (counts.indexOf(i) === -1) {
          counts.push(i);
        }
      }
      counter = counts.length;
      if (el.attr('fill') === hover && el.classed('selected') === false) {
        switch (counter) {
          case 0:
            polygon.each(function() {
              if (d3.select(this).attr('data-pays') === el.attr('data-pays')) {
                return d3.select(this).classed('selected', true).attr('fill', hover);
              }
            });
            d3.select('.country').text(country);
            d3.select('#tip').text(tipSelectTwo);
            break;
          case 1:
            polygon.each(function() {
              if (d3.select(this).attr('data-pays') === el.attr('data-pays')) {
                return d3.select(this).classed('selected second-selection', true).attr('fill', hover);
              }
            });
            textCountry = d3.select('.country').text();
            d3.select('.country').text(textCountry + separator + el.attr('data-pays'));
            d3.select('.reset-map').style('display', 'inline-block');
            d3.select('#tip').text(tipSelectOther);
            break;
          case 2:
            polygon.each(function() {
              if (d3.select(this).classed('second-selection') === true) {
                d3.select(this).classed('selected second-selection', false);
                return d3.select(this).attr('fill', active);
              }
            });
            polygon.each(function() {
              if (d3.select(this).attr('data-pays') === el.attr('data-pays')) {
                return d3.select(this).classed('selected second-selection', true).attr('fill', hover);
              }
            });
            textCountry = d3.select('.country').text();
            textCountry = textCountry.split(' ');
            d3.select('.country').text(textCountry[0] + separator + el.attr('data-pays'));
        }
        return d3.select('.more-info').style('display', 'inline-block').attr('data-pays', country);
      }
    }
  };

  filters = {
    onMouseOver: function() {
      var info;
      info = d3.select(this).attr('data-filter');
      return d3.json('data/filters.json', function(root) {
        return d3.select('#active-filter').text(root[info].short);
      });
    },
    onMouseLeave: function() {
      return filterList.selectAll('div').each(function() {
        var info;
        if (d3.select(this).classed('active') === true) {
          info = d3.select(this).attr('data-filter');
          return d3.json('data/filters.json', function(root) {
            return d3.select('#active-filter').text(root[info].short);
          });
        }
      });
    },
    onClick: function() {
      var el;
      el = d3.select(this);
      filterList.selectAll('div').classed('active', false);
      el.classed('active', true);
      return d3.json('data/filters.json', function(root) {
        return d3.select('#active-filter').text(root[info].short);
      });
    }
  };

  datas = {
    init: function() {
      var el;
      d3.select('#leftContent').classed('extended', true);
      d3.select('#displayData').classed('dataPanelOpened', true);
      d3.select('#filters').classed('closed', true);
      map.init;
      el = d3.select(this);
      return d3.json('data/countries/' + el.attr('data-pays') + '.json', function(root) {
        return d3.select('#datas h2').text(modelEducatif + root.preposition + el.attr('data-pays'));
      });
    },
    close: function() {
      d3.select('#leftContent').classed('extended', false);
      d3.select('#displayData').classed('dataPanelOpened', false);
      return d3.select('#filters').classed('closed', false);
    }
  };

  d3.select('.reset-map').on('click', map.init);

  polygon.on('mouseover', map.onMouseOver).on('mouseleave', map.onMouseLeave).on('click', map.onClick).each(function(d) {
    return d3.select(this).attr('fill', function() {
      if (countries.indexOf(d3.select(this).attr('data-pays')) > -1) {
        return active;
      } else {
        return inactive;
      }
    });
  });

  filterList.on('mouseleave', filters.onMouseLeave).selectAll('div').on('mouseover', filters.onMouseOver).on('click', filters.onClick);

  d3.select('.more-info').on('click', datas.init);

  d3.select('#closeDataView').on('click', datas.close);

}).call(this);
